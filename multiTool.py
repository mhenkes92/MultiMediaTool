import tkinter as tk
import wave, requests, os, sys, io, subprocess, threading, base64, shutil, cv2, time, pytesseract, imageio, moviepy
from tkinter import filedialog, ttk, messagebox
from moviepy.video.io.VideoFileClip import VideoFileClip
from PIL import Image, ImageTk
import numpy as np
from io import BytesIO
from pdf2image import convert_from_path
from PyPDF2 import PdfWriter, PdfReader
from pydub import AudioSegment  # New import for audio processing


# ---------------------- Video Processing Functions ---------------------- #

def compress_video(input_path, output_path):
    target_size = 16 * 1024 * 1024  # 16 MB
    video = VideoFileClip(input_path)
    duration = video.duration
    original_size = os.path.getsize(input_path)
    target_bitrate = int((target_size * 8) / duration)

    compression_complete = threading.Event()  # Create an event to signal completion

    def run_ffmpeg():
        # Determine the path to the FFmpeg executable
        if getattr(sys, 'frozen', False):
            # If the application is frozen (compiled), get the path to the executable
            base_path = sys._MEIPASS  # This is the temporary folder where the executable is unpacked
        else:
            # If running in a normal Python environment, use the current directory
            base_path = os.path.dirname(os.path.abspath(__file__))

        ffmpeg_path = shutil.which("ffmpeg")
        if not ffmpeg_path:
            print("FFmpeg not found in PATH.")
            compression_complete.set()  # Signal that compression is complete even if it fails
            return

        process = subprocess.Popen(
            [ffmpeg_path, '-i', input_path, '-c:v', 'libx264', '-preset', 'medium',
             '-b:v', f'{target_bitrate}', '-c:a', 'aac', '-b:a', '128k', '-y', output_path],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )

        # Capture output and error
        stdout, stderr = process.communicate()  # Wait for the process to complete and capture output
        print(stdout.decode())  # Print standard output
        print(stderr.decode())  # Print standard error

        compression_complete.set()  # Signal that compression is complete

    threading.Thread(target=run_ffmpeg).start()

    return original_size, compression_complete  # Return the original size and the event

def convert_to_mp4(input_path, output_path):
    try:
        # Print the input and output paths for debugging
        print(f"Input Path: {input_path}")
        print(f"Output Path: {output_path}")

        # Check if the input file exists
        if not os.path.exists(input_path):
            raise FileNotFoundError(f"Input file not found: {input_path}")
        
        # Load the video file
        video = VideoFileClip(input_path)
        
        # Check if the VideoFileClip object is properly created
        if video is None:
            raise ValueError("VideoFileClip returned None. The file may not have been loaded correctly.")

        # Convert and save the video to MP4 format
        video.write_videofile(output_path, codec="libx264")
    
    except Exception as e:
        print(f"Error during video processing: {e}")
        raise  # Re-raise the exception after printing the error

def convert_to_gif(input_path, output_path):
    video = VideoFileClip(input_path)
    fps = video.fps
    width = int(video.w)
    height = int(video.h)
    images = []
    temp_filenames = []  # List to keep track of temporary filenames

    for i in range(int(video.duration * fps)):
        temp_filename = f"frame_{i}.png"
        video.save_frame(temp_filename, t=i/fps)
        img = Image.open(temp_filename).resize((width, height))
        images.append(img)
        temp_filenames.append(temp_filename)  # Store the filename

    # Save images as GIF
    images[0].save(output_path, format='GIF', append_images=images[1:],
                   save_all=True, duration=int(1000 / fps), loop=0)

    # Clean up temporary images
    for temp_filename in temp_filenames:
        os.remove(temp_filename)  # Remove the temporary file

def update_size_labels(original_size, compressed_size, original_label, compressed_label):
    original_label['text'] = f"Originalgröße: {original_size / 1024 / 1024:.2f} MB"
    compressed_label['text'] = f"Komprimierte Größe: {compressed_size / 1024 / 1024:.2f} MB"

def video_processing_thread(action, input_path, output_path, original_label, compressed_label, progress_label):
    try:
        if action == "compress":
            original_size, compression_complete = compress_video(input_path, output_path)
            compression_complete.wait()  # Wait for the compression to finish
            compressed_size = os.path.getsize(output_path)  # Now get the compressed size
            update_size_labels(original_size, compressed_size, original_label, compressed_label)  # Update size labels
        elif action == "convert_mp4":
            convert_to_mp4(input_path, output_path)
        elif action == "convert_gif":
            convert_to_gif(input_path, output_path)
    except Exception as e:
        print(f"Error during processing: {e}")
        messagebox.showerror("Fehler", f"Fehler bei der Videoverarbeitung: {e}")
    finally:
        progress_label.after(0, lambda: progress_label.config(text="Fertig"))

# ---------------------- PDF Processing Functions ---------------------- #

def improve_pdf_for_ai_reading(input_path, output_path):
    # Ensure the output path ends with .pdf
    if not output_path.lower().endswith('.pdf'):
        output_path = os.path.splitext(output_path)[0] + '.pdf'
    # Define the output path prefix for the images (before adding -1, -2, etc.)
    output_path_prefix = os.path.splitext(output_path)[0]
    # Find the pdftoppm executable
    pdftoppm_path = shutil.which("pdftoppm")
    if pdftoppm_path is None:
        raise FileNotFoundError("pdftoppm executable not found. Please ensure Poppler is installed and in your PATH.")
        # Find the Tesseract executable
    tesseract_path = shutil.which("tesseract")
    if tesseract_path is None:
        raise FileNotFoundError("Tesseract executable not found. Please ensure Tesseract is installed and in your PATH.")
    # Convert PDF to PPM images using pdftoppm
    try:
        subprocess.run([pdftoppm_path, input_path, output_path_prefix, "-png"], check=True)
        # Collect all output images (assuming they are named as output_path_prefix-1.png, etc.)
        images = []
        i = 1
        while True:
            img_file = f"{output_path_prefix}-{i}.png"
            if os.path.exists(img_file):
                img = Image.open(img_file)
                images.append(img)
                i += 1
            else:
                break

        writer = PdfWriter()

        for img in images:
            # Convert image to grayscale
            gray = cv2.cvtColor(np.array(img), cv2.COLOR_BGR2GRAY)

            # Apply adaptive thresholding
            binary = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,
                                           cv2.THRESH_BINARY, 11, 2)

            # Denoise image
            denoised = cv2.fastNlMeansDenoising(binary, None, 10, 7, 21)

            # Enhance contrast
            clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8,8))
            enhanced = clahe.apply(denoised)

            # Convert back to PIL format
            enhanced_pil = Image.fromarray(enhanced)

            # Perform OCR to extract text
            text = pytesseract.image_to_string(enhanced_pil)

            # Create a new PDF page with the improved image
            pdf = pytesseract.image_to_pdf_or_hocr(enhanced_pil, extension='pdf')
            pdf_bytes = io.BytesIO(pdf)

            # Add page to the writer
            reader = PdfReader(pdf_bytes)
            writer.add_page(reader.pages[0])

        # Save the final enhanced PDF
        with open(output_path, "wb") as f:
            writer.write(f)

        print(f"Verbesserte PDF für KI-Lesbarkeit gespeichert als: {output_path}")

    except subprocess.CalledProcessError as e:
        print(f"Fehler beim Aufruf von pdftoppm: {e}")
        messagebox.showerror("Fehler", f"Fehler beim Aufruf von pdftoppm: {e}")

def compress_pdf(input_path: str, output_path: str, quality: str = "ebook"):
    """
    Compress a PDF file without compromising readability using Ghostscript.
    
    :param input_path: Path to the input PDF file.
    :param output_path: Path to save the compressed PDF file.
    :param quality: Compression quality (screen, ebook, printer, prepress). Default is 'ebook'.
    """
    # Ensure the output path ends with .pdf
    if not output_path.lower().endswith('.pdf'):
        output_path = os.path.splitext(output_path)[0] + '.pdf'
    
    # Ensure Ghostscript is installed
    gs_path = r"C:\gs\bin\gswin64.exe"
    if gs_path is None:
        raise FileNotFoundError("Ghostscript executable not found. Please ensure Ghostscript is installed and in your PATH.")
    
    command = [
        gs_path, "-sDEVICE=pdfwrite",
        "-dCompatibilityLevel=1.4",
        "-dPDFSETTINGS=/{}".format(quality),
        "-dNOPAUSE", "-dQUIET", "-dBATCH",
        "-sOutputFile={}".format(output_path),
        input_path
    ]
    
    try:
        subprocess.run(command, check=True)
        print(f"Komprimierte PDF gespeichert als: {output_path}")
    except subprocess.CalledProcessError as e:
        print(f"Fehler bei der PDF-Komprimierung: {e}")
        
def pdf_processing_thread(action, input_path, output_path, progress_label, quality=None):
    try:
        if action == "compress":
            compress_pdf(input_path, output_path, quality)
        elif action == "improve":
            improve_pdf_for_ai_reading(input_path, output_path)
    except Exception as e:
        print(f"Fehler bei der PDF-Verarbeitung: {e}")
        messagebox.showerror("Fehler", f"Fehler bei der PDF-Verarbeitung: {e}")
    finally:
        progress_label.after(0, lambda: progress_label.config(text="Fertig"))

# ---------------------- Audio Processing Functions ---------------------- #
# Define the available audio formats
audio_format = {
    'mp3': 'mp3',
    'wav': 'wav',
    'flac': 'flac',
    # Add other formats as needed
}

def convert_audio(input_path, output_path, format):
    # Ensure the output_path has the correct file extension for the selected format
    output_path = os.path.splitext(output_path)[0] + f".{format.lower()}"
    
    audio = AudioSegment.from_file(input_path)  # Load audio file
    audio.export(output_path, format=format)    # Export to the specified format

def audio_processing_thread(input_path, output_path, audio_format, progress_label):
    try:
        convert_audio(input_path, output_path, audio_format)  # Call the conversion function
        # Update the output path with the forced format's extension
        output_path = os.path.splitext(output_path)[0] + f".{audio_format.lower()}"
        progress_label['text'] = f"Audio Datei erfolgreich verarbeitet and gespeichert unter: {output_path}"
    except Exception as e:
        progress_label['text'] = f"Error: {str(e)}"  # Handle any errors during conversion
    finally:
        progress_label.after(0, lambda: progress_label.config(text="Fertig"))

# ---------------------- GUI Functions ---------------------- #

def browse_input_file(entry_widget):
    filetypes = [
        ("All files", "*.*"),
        ("Video files", "*.mp4 *.avi *.mov *.mkv"),
        ("Audio files", "*.mp3 *.wav *.aac *.flac"),
        ("PDF files", "*.pdf")
    ]
    
    filepath = filedialog.askopenfilename(filetypes=filetypes)
    entry_widget.delete(0, tk.END)
    entry_widget.insert(0, filepath)


def browse_output_file(entry_widget, action):
    if action in ["compress", "convert_mp4", "convert_gif"]:
        # For video actions, allow saving video files
        filetypes = [("Video files", "*.mp4 *.avi *.mov *.mkv"), ("All files", "*.*")]
    elif action == "pdf":
        filetypes = [("PDF files", "*.pdf")]
    elif action == "audio":
        # For audio actions, allow saving audio files
        filetypes = [("Audio files", "*.mp3 *.wav *.aac *.flac"), ("All files", "*.*")]
    else:
        filetypes = [("All files", "*.*")]  # Default case

    filepath = filedialog.asksaveasfilename(defaultextension="", filetypes=filetypes)
    entry_widget.delete(0, tk.END)
    entry_widget.insert(0, filepath)


def start_video_processing(action, original_label, compressed_label, progress_label):
    # Clear size labels when a new action is started
    original_label['text'] = ""
    compressed_label['text'] = ""
    # set progress label
    progress_label.after(0, lambda: progress_label.config(text="Verarbeite Videodatei..."))
    progress_label.grid()
    
    input_path = video_input_entry.get()
    output_path = video_output_entry.get()
    
    if not input_path or not output_path:
        messagebox.showerror("Fehler", "Bitte wählen Sie Eingabe- und Ausgabedateien aus.")
        return
    
    # Change the output extension to match the input file's extension
    if action == "compress":
        output_extension = os.path.splitext(input_path)[1]
        output_path = os.path.splitext(output_path)[0] + output_extension
    elif action == "convert_mp4":
        output_path = os.path.splitext(output_path)[0] + ".mp4"
    elif action == "convert_gif":
        output_path = os.path.splitext(output_path)[0] + ".gif"
    
    # Start the video processing in a separate thread
    threading.Thread(target=video_processing_thread, args=(action, input_path, output_path, original_label, compressed_label, progress_label)).start()
    
def start_pdf_processing(action, progress_label):
    # set progress label
    progress_label.after(0, lambda: progress_label.config(text="Verarbeite PDF..."))
    progress_label.grid()
    
    input_path = pdf_input_entry.get()
    output_path = pdf_output_entry.get()
    
    if not input_path or not output_path:
        messagebox.showerror("Fehler", "Bitte wählen Sie Eingabe- und Ausgabedateien für PDF aus.")
        return

    # Ensure output extension is .pdf
    output_path = os.path.splitext(output_path)[0] + ".pdf"

    # Determine compression quality if compressing
    quality_mapping = {"Niedrig": "screen", "Mittel": "ebook", "Hoch": "printer"}
    compression_quality = quality_mapping.get(quality_var.get(), "ebook")  # Default to "Mittel"

    # Start the PDF processing in a separate thread
    threading.Thread(
        target=pdf_processing_thread, 
        args=(action, input_path, output_path, progress_label, compression_quality if action == "compress" else None)
    ).start()
    
def start_audio_processing(audio_format, progress_label):
    print(f"Audio format: {audio_format}")
    progress_label.after(0, lambda: progress_label.config(text="Verarbeite Audiodatei..."))
    
    input_path = audio_input_entry.get()
    output_path = audio_output_entry.get()
    
    if not input_path or not output_path:
        messagebox.showerror("Fehler", "Bitte wählen Sie Eingabe- und Ausgabedateien für Audio aus.")
        return

    # Start the audio processing in a separate thread
    threading.Thread(target=audio_processing_thread, args=(input_path, output_path, audio_format, progress_label)).start()

# ---------------------- GUI Setup ---------------------- #
# Add ciSio Logo to bar
root = tk.Tk()
# Remove the default title bar and feather icon
root.title("")
root.geometry("1000x500")  # Set a default size for better appearance
title_bar = tk.Frame(root, bg="lightgray", height=40)
title_bar.pack(fill="x", side="top")
# Base64 encoded icon
icon_base64 = """AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAAAAASxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xXErv9W1cT/XNbG/1zWxv9c1sb/XNbG/1zWxv9c1sb/XNbG/1zWxv9c1sb/XNbG/1zWxv9c1sb/XNbG/1zWxv9P08L/EsSt/xLErf8SxK3/EsSt/xLErf9T1MP/VtXE/zPMuP8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf9U1MT/4/j1///////////////////////////////////////////////////////////////////////////////////////V9PD/Qc+9/xLErf8SxK3/E8St////////////kePZ/xLErf8SxK3/EsSt/xLErf8SxK3/W9bG//v+/f/////////////////////////////////////////////////////////////////////////////////////////////////z/Pv/QtC9/xLErf8TxK3///////////+R49n/EsSt/xLErf8SxK3/EsSt/yHHsv/t+vn///////r9/f+Q49j/R9G//0DPvf9Az73/QM+9/0DPvf9Az73/QM+9/0DPvf9Az73/QM+9/0DPvf9Az73/QM+9/1bVxP+37eb////////////W9PH/E8St/xPErf///////////5Hj2f8SxK3/EsSt/xLErf8SxK3/dNzP////////////e97R/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xPErf+97uj///////////9K0sD/E8St////////////kePZ/xLErf8SxK3/EsSt/xLErf9r2sz/p+ng/6jp4P8ex7H/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/2fZyv///////////27bzP8TxK3///////////+R49n/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/Z9nK////////////bNrM/xPErf///////////5Hj2f8SxK3/EsSt/xLErf8SxK3/leTa///////p+ff/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xTErf/A7+n///////////8/z7z/E8St////////////kePZ/xLErf8SxK3/EsSt/xLErf+Y5dv//////+v6+P8SxK3/EsSt/xLErf8SxK3/EsSt/yjJtP9X1cX/XtfH/17Xx/9e18f/XtfH/17Xx/9e18f/XtfH/1/Xx/9n2cr/we/p////////////xvHr/xLErf8TxK3///////////+R49n/EsSt/xLErf8SxK3/EsSt/5jl2///////6/r4/xLErf8SxK3/EsSt/zHLt/+47eb//f7+/////////////////////////////////////////////////////////////////+f59v8yzLj/EsSt/xPErf///////////5Hj2f8SxK3/EsSt/xLErf8SxK3/mOXb///////r+vj/EsSt/xLErf83zbn/6vn4//////////////////////////////////////////////////////////////////////+77uf/MMu3/xLErf8SxK3/E8St////////////kePZ/xLErf8SxK3/EsSt/xLErf+Y5dv//////+v6+P8SxK3/FMSt/9Dz7////////////7zu5/963dH/btvN/2vazP9r2sz/a9rM/2vazP9r2sz/a9rM/2vazP9f18f/Msu4/xLErf8SxK3/EsSt/xLErf8TxK3///////////+R49n/EsSt/xLErf8SxK3/EsSt/5jl2///////6/r4/xLErf9N0sH///////////+m6OD/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xPErf///////////5Hj2f8SxK3/EsSt/xLErf8SxK3/mOXb///////r+vj/EsSt/33e0v///////////zzOu/8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/yPIsv8jyLL/GcWv/xLErf8SxK3/EsSt/xLErf+Y5dv//////+v6+P8SxK3/gt/T////////////NMy4/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8oybT/pung/6fp4P9k2Mn/EsSt/xLErf8SxK3/EsSt/5jl2///////6/r4/xLErf9i2Mj///////////+J4db/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/4bh1f///////////2vazP8SxK3/EsSt/xLErf8SxK3/mOXb///////r+vj/EsSt/xzGsP/q+fj///////z+/v+L4tb/N826/y3Ktv8tyrb/Lcq2/y3Ktv8tyrb/Lcq2/y3Ktv8tyrb/Lcq2/y3Ktv8tyrb/Lcq2/zbNuf+I4db/+/79///////m+Pb/GcWv/xLErf8SxK3/EsSt/xLErf87zrv/XNbG/1XUxP8SxK3/EsSt/1vWxv/8/v7/////////////////////////////////////////////////////////////////////////////////////////////////+v39/1TUxP8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/1nVxf/m+Pb//////////////////////////////////////////////////////////////////////////////////////+P49f9S1MP/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xjFr/9m2cr/eN3Q/3nd0P953dD/ed3Q/3nd0P953dD/ed3Q/3nd0P953dD/ed3Q/3nd0P953dD/ed3Q/3fd0P9k2Mn/F8Wv/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/EsSt/xLErf8SxK3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="""
# Decode the base64 icon and set it as window icon
icon_data = io.BytesIO(base64.b64decode(icon_base64))
icon_image = Image.open(BytesIO(base64.b64decode(icon_base64))).convert("RGBA")
icon_photo = ImageTk.PhotoImage(icon_image)
root.iconphoto(True, icon_photo)
# cisio logo
base64_logo = """"""
logo_image = Image.open(io.BytesIO(base64.b64decode(base64_logo.encode())))
# Resize logo for custom title bar (example: 80x40)
logo_image_resized = logo_image.resize((80, 40), Image.LANCZOS)
logo_tk_image = ImageTk.PhotoImage(logo_image_resized)
logo_label = tk.Label(title_bar, image=logo_tk_image, bg="lightgray")
logo_label.pack(side="left", padx=10)
# You can add a label for the window title next to the logo
title_label = tk.Label(title_bar, text="Multimedia Werkzeug", bg="lightgray", font=("Arial", 14))
title_label.pack(side="left", padx=10)
# Create a Notebook
notebook = ttk.Notebook(root)
notebook.pack(expand=True, fill='both')
# Create a label for the copyright notice
copyright_label = tk.Label(root, text="Copyright © 2025 ciSio. All Rights Reserved.", anchor='w')
copyright_label.pack(side='bottom', fill='x')

# Create frames for each tab
video_frame = ttk.Frame(notebook)
pdf_frame = ttk.Frame(notebook)
audio_frame = ttk.Frame(notebook)  # New frame for audio tool
help_frame = ttk.Frame(notebook)

# Add frames to notebook as tabs
notebook.add(video_frame, text="Video Tool")
notebook.add(pdf_frame, text="PDF Tool")
notebook.add(audio_frame, text="Audio Tool")  # New tab for audio
notebook.add(help_frame, text="Hilfe")

# ---------------------- Video Processing UI ---------------------- #

# Video Tool Widgets
video_input_label = tk.Label(video_frame, text="Eingabevideo:")
video_input_label.grid(row=0, column=0, padx=10, pady=10, sticky="w")
video_input_entry = tk.Entry(video_frame, width=50)
video_input_entry.grid(row=0, column=1, padx=10, pady=10, sticky="w")
video_input_browse_button = tk.Button(video_frame, text="Durchsuchen...", command=lambda: browse_input_file(video_input_entry))
video_input_browse_button.grid(row=0, column=2, padx=10, pady=10)

video_output_label = tk.Label(video_frame, text="Ausgabedatei:")
video_output_label.grid(row=1, column=0, padx=10, pady=10, sticky="w")
video_output_entry = tk.Entry(video_frame, width=50)
video_output_entry.grid(row=1, column=1, padx=10, pady=10, sticky="w")
video_output_browse_button = tk.Button(video_frame, text="Speichern unter...", command=lambda: browse_output_file(video_output_entry, "compress"))
video_output_browse_button.grid(row=1, column=2, padx=10, pady=10)

# Buttons for video actions
compress_button = tk.Button(video_frame, text="Video Komprimieren", command=lambda: start_video_processing("compress", video_original_size_label, video_compressed_size_label, video_progress_label))
compress_button.grid(row=2, column=1, padx=10, pady=10, sticky="w")

convert_mp4_button = tk.Button(video_frame, text="In MP4 Umwandeln", command=lambda: start_video_processing("convert_mp4", video_original_size_label, video_compressed_size_label, video_progress_label))
convert_mp4_button.grid(row=3, column=1, padx=10, pady=10, sticky="w")

convert_gif_button = tk.Button(video_frame, text="In GIF Umwandeln", command=lambda: start_video_processing("convert_gif", video_original_size_label, video_compressed_size_label, video_progress_label))
convert_gif_button.grid(row=4, column=1, padx=10, pady=10, sticky="w")

# Progress label for video
video_progress_label = tk.Label(video_frame, text="")
video_progress_label.grid(row=5, column=0, columnspan=3, padx=10, pady=5)
video_progress_label.grid_remove()  # Hide the label initially

# Labels for original and compressed sizes
video_original_size_label = tk.Label(video_frame, text="")
video_original_size_label.grid(row=7, column=0, columnspan=3, padx=10, pady=5)

video_compressed_size_label = tk.Label(video_frame, text="")
video_compressed_size_label.grid(row=8, column=0, columnspan=3, padx=10, pady=5)

# ---------------------- PDF Processing UI ---------------------- #

# PDF Tool Widgets
pdf_label = tk.Label(pdf_frame, text="PDF-Verarbeitung für KI-Lesbarkeit", font=("Helvetica", 14, "bold"))
pdf_label.grid(row=0, column=0, columnspan=5, padx=10, pady=10)

pdf_input_label = tk.Label(pdf_frame, text="Eingabe-PDF:")
pdf_input_label.grid(row=1, column=0, padx=10, pady=10, sticky="w")
pdf_input_entry = tk.Entry(pdf_frame, width=50)
pdf_input_entry.grid(row=1, column=1, padx=10, pady=10, sticky="w")
pdf_input_browse_button = tk.Button(pdf_frame, text="Durchsuchen...", command=lambda: browse_input_file(pdf_input_entry))
pdf_input_browse_button.grid(row=1, column=2, padx=10, pady=10)

pdf_output_label = tk.Label(pdf_frame, text="Ausgabedatei:")
pdf_output_label.grid(row=2, column=0, padx=10, pady=10, sticky="w")
pdf_output_entry = tk.Entry(pdf_frame, width=50)
pdf_output_entry.grid(row=2, column=1, padx=10, pady=10, sticky="w")
pdf_output_browse_button = tk.Button(pdf_frame, text="Speichern unter...", command=lambda: browse_output_file(pdf_output_entry, "pdf"))
pdf_output_browse_button.grid(row=2, column=2, padx=10, pady=10)

# Compression quality selection
quality_var = tk.StringVar(value="Mittel")  # Default: Mittel
quality_label = tk.Label(pdf_frame, text="Qualität:")
quality_label.grid(row=3, column=0, padx=10, pady=5, sticky="w")
quality_dropdown = tk.OptionMenu(pdf_frame, quality_var, "Niedrig", "Mittel", "Hoch")
quality_dropdown.grid(row=3, column=1, padx=10, pady=5, sticky="w")  # Place dropdown in the same row

# Draw a line between the buttons
line_canvas = tk.Canvas(pdf_frame, width=2, height=100, bg="black")
line_canvas.grid(row=3, column=1, rowspan=3, padx=5, pady=5)  # Adjusted row for the line

# Button to start PDF enhancement
pdf_process_button = tk.Button(pdf_frame, text="PDF Verbessern", command=lambda: start_pdf_processing("improve", pdf_progress_label))
pdf_process_button.grid(row=5, column=2, padx=5, pady=5, sticky="w")  # Reduced padding

# GUI Button for PDF Compression
pdf_compress_button = tk.Button(pdf_frame, text="PDF Komprimieren", command=lambda: start_pdf_processing("compress", pdf_progress_label))
pdf_compress_button.grid(row=5, column=1, padx=5, pady=5, sticky="w")  # Reduced padding

# Progress label for PDF
pdf_progress_label = tk.Label(pdf_frame, text="")
pdf_progress_label.grid(row=6, column=0, columnspan=3, padx=10, pady=5)
pdf_progress_label.grid_remove()  # Hide the label initially

# ---------------------- Audio Tool UI Elements ---------------------- #
# Audio input
audio_input_label = tk.Label(audio_frame, text="Audio Eingabedatei:")
audio_input_label.grid(row=0, column=0, padx=10, pady=10)
audio_input_entry = tk.Entry(audio_frame, width=50)
audio_input_entry.grid(row=0, column=1, padx=10, pady=10)
audio_input_button = tk.Button(audio_frame, text="Durchsuchen", command=lambda: browse_input_file(audio_input_entry))
audio_input_button.grid(row=0, column=2, padx=10, pady=10)

# Audio output
audio_output_label = tk.Label(audio_frame, text="Audio Ausgabedatei:")
audio_output_label.grid(row=1, column=0, padx=10, pady=10)
audio_output_entry = tk.Entry(audio_frame, width=50)
audio_output_entry.grid(row=1, column=1, padx=10, pady=10)
audio_output_browse_button = tk.Button(audio_frame, text="Speichern unter...", command=lambda: browse_output_file(audio_output_entry, "audio"))
audio_output_browse_button.grid(row=1, column=2, padx=10, pady=10)

# Format selection
audio_format_label = tk.Label(audio_frame, text="Wählen Sie ein Format:")
audio_format_label.grid(row=2, column=0, padx=10, pady=10)
audio_format_var = tk.StringVar(value="mp3")  # Default format
audio_format_options = ttk.Combobox(audio_frame, textvariable=audio_format_var, values=["mp3", "wav", "ogg"])
audio_format_options.grid(row=2, column=1, padx=10, pady=10)

# Process buttons and labels
audio_progress_label = tk.Label(audio_frame, text="")
audio_process_button = tk.Button(audio_frame, text="Audio verarbeiten", command=lambda: start_audio_processing(audio_format_var.get(), audio_progress_label))
audio_process_button.grid(row=3, column=1, padx=10, pady=10)

# Add the labels for progress
audio_progress_label.grid(row=5, column=1, padx=10, pady=10)

# ---------------------- Help UI Elements ---------------------- #
help_text = """
Willkommen zur Hilfe-Seite!

Hier finden Sie Anleitungen und Informationen zur Nutzung des Programms.

1. Video Tool: Komprimieren und konvertieren Sie Videos.
2. PDF Tool: Verbessern Sie PDF-Dokumente für bessere KI-Lesbarkeit oder komprimieren Sie diese um die Dateigröße zu reduzieren.
3. Audio Tool: Wandeln Sie Audio-Dateien um.

Klicken Sie auf den jeweiligen Tab um Video-, PDF-, oder Audiodateien zu verarbeiten. Das Prinzip des Vorgehens zur Verarbeitung ist in jedem Tab gleich:
    1. Wählen Sie mittels Klick auf Durchsuchen eine Quelldatei aus und klicken Sie anschließend auf Öffnen. 
    2. Klicken Sie auf Speichern unter, um einen Zielordner zu wählen in dem die Ausgabedatei zu speichern ist. 
    3. Gemäß der darunterliegenden Buttons wird der Verarbeitevorgang gestartet. Dazu erscheint die Meldung "Verarbeite Datei". 
        Wenn die Verarbeitung abgeschlossen ist erscheint die Meldung "Fertig". 
    
    Bsp.: PDF komprimieren: 
    Nachdem die Quelldatei ausgewählt und der Speicherort festgelegt wurden klicken Sie auf das Dropdown-Menü neber dem Textfeld "Qualität".
    Anschließend klicken Sie auf den Button "PDF komprimieren".
    
        !!!Bitte warten Sie unbedingt bis die Fertig Meldung erscheint und beenden Sie das Programm nicht vorzeitig.!!!

Wenn Sie weitere Hilfe benötigen, wenden Sie sich bitte an unseren Support: manuel.henkes@cisio-gmbh.com
"""

# Create a canvas to make the help text scrollable
canvas = tk.Canvas(help_frame)
canvas.pack(side="left", fill="both", expand=True)

# Create vertical and horizontal scrollbars for the canvas
vsb = ttk.Scrollbar(help_frame, orient="vertical", command=canvas.yview)
vsb.pack(side="right", fill="y")

hsb = ttk.Scrollbar(help_frame, orient="horizontal", command=canvas.xview)
hsb.pack(side="bottom", fill="x")

# Configure the canvas to use the scrollbars
canvas.configure(yscrollcommand=vsb.set, xscrollcommand=hsb.set)

# Create a frame within the canvas to hold the help text
text_frame = ttk.Frame(canvas)

# Add the help text inside the frame
help_label = tk.Label(text_frame, text=help_text, justify="left", padx=10, pady=10)
help_label.pack(fill="both", expand=True)

# Windowing the frame to the canvas
canvas.create_window((0, 0), window=text_frame, anchor="nw")

# Update the scroll region to fit the content
text_frame.update_idletasks()
canvas.config(scrollregion=canvas.bbox("all"))


# ---------------------- Start the Tkinter main loop ---------------------- #

root.mainloop()
